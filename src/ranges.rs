// WARNING: This file is generated by build.rs
// Do not modify this file directly.
/// Unicode ranges
use core::ops::RangeInclusive;

// Constants for unicode ranges

/// Whitespace other than space
pub const WHITESPACE: RangeInclusive<u32> = 0x00009..=0x0000C;
/// Basic latin, excluding control characters
pub const BASIC_LATIN: RangeInclusive<u32> = 0x00020..=0x0007E; // 0x7F is DEL
/// Latin-1 Supplement
#[cfg(feature = "latin-1-supplement")]
pub const LATIN_1_SUPPLEMENT: RangeInclusive<u32> = 0x00080..=0x000FF;
/// Latin Extended-A
#[cfg(feature = "latin-extended-a")]
pub const LATIN_EXTENDED_A: RangeInclusive<u32> = 0x00100..=0x0017F;
/// Latin Extended-B
#[cfg(feature = "latin-extended-b")]
pub const LATIN_EXTENDED_B: RangeInclusive<u32> = 0x00180..=0x0024F;
/// IPA Extensions
#[cfg(feature = "ipa-extensions")]
pub const IPA_EXTENSIONS: RangeInclusive<u32> = 0x00250..=0x002AF;
/// Spacing Modifier Letters
#[cfg(feature = "spacing-modifier-letters")]
pub const SPACING_MODIFIER_LETTERS: RangeInclusive<u32> = 0x002B0..=0x002FF;
/// Combining Diacritical Marks
#[cfg(feature = "combining-diacritical-marks")]
pub const COMBINING_DIACRITICAL_MARKS: RangeInclusive<u32> = 0x00300..=0x0036F;
/// Greek and Coptic
#[cfg(feature = "greek-and-coptic")]
pub const GREEK_AND_COPTIC: RangeInclusive<u32> = 0x00370..=0x003FF;
/// Cyrillic
#[cfg(feature = "cyrillic")]
pub const CYRILLIC: RangeInclusive<u32> = 0x00400..=0x004FF;
/// Cyrillic Supplement
#[cfg(feature = "cyrillic-supplement")]
pub const CYRILLIC_SUPPLEMENT: RangeInclusive<u32> = 0x00500..=0x0052F;
/// Armenian
#[cfg(feature = "armenian")]
pub const ARMENIAN: RangeInclusive<u32> = 0x00530..=0x0058F;
/// Hebrew
#[cfg(feature = "hebrew")]
pub const HEBREW: RangeInclusive<u32> = 0x00590..=0x005FF;
/// Arabic
#[cfg(feature = "arabic")]
pub const ARABIC: RangeInclusive<u32> = 0x00600..=0x006FF;
/// Syriac
#[cfg(feature = "syriac")]
pub const SYRIAC: RangeInclusive<u32> = 0x00700..=0x0074F;
/// Arabic Supplement
#[cfg(feature = "arabic-supplement")]
pub const ARABIC_SUPPLEMENT: RangeInclusive<u32> = 0x00750..=0x0077F;
/// Thaana
#[cfg(feature = "thaana")]
pub const THAANA: RangeInclusive<u32> = 0x00780..=0x007BF;
/// NKo
#[cfg(feature = "nko")]
pub const NKO: RangeInclusive<u32> = 0x007C0..=0x007FF;
/// Samaritan
#[cfg(feature = "samaritan")]
pub const SAMARITAN: RangeInclusive<u32> = 0x00800..=0x0083F;
/// Mandaic
#[cfg(feature = "mandaic")]
pub const MANDAIC: RangeInclusive<u32> = 0x00840..=0x0085F;
/// Syriac Supplement
#[cfg(feature = "syriac-supplement")]
pub const SYRIAC_SUPPLEMENT: RangeInclusive<u32> = 0x00860..=0x0086F;
/// Arabic Extended-B
#[cfg(feature = "arabic-extended-b")]
pub const ARABIC_EXTENDED_B: RangeInclusive<u32> = 0x00870..=0x0089F;
/// Arabic Extended-A
#[cfg(feature = "arabic-extended-a")]
pub const ARABIC_EXTENDED_A: RangeInclusive<u32> = 0x008A0..=0x008FF;
/// Devanagari
#[cfg(feature = "devanagari")]
pub const DEVANAGARI: RangeInclusive<u32> = 0x00900..=0x0097F;
/// Bengali
#[cfg(feature = "bengali")]
pub const BENGALI: RangeInclusive<u32> = 0x00980..=0x009FF;
/// Gurmukhi
#[cfg(feature = "gurmukhi")]
pub const GURMUKHI: RangeInclusive<u32> = 0x00A00..=0x00A7F;
/// Gujarati
#[cfg(feature = "gujarati")]
pub const GUJARATI: RangeInclusive<u32> = 0x00A80..=0x00AFF;
/// Oriya
#[cfg(feature = "oriya")]
pub const ORIYA: RangeInclusive<u32> = 0x00B00..=0x00B7F;
/// Tamil
#[cfg(feature = "tamil")]
pub const TAMIL: RangeInclusive<u32> = 0x00B80..=0x00BFF;
/// Telugu
#[cfg(feature = "telugu")]
pub const TELUGU: RangeInclusive<u32> = 0x00C00..=0x00C7F;
/// Kannada
#[cfg(feature = "kannada")]
pub const KANNADA: RangeInclusive<u32> = 0x00C80..=0x00CFF;
/// Malayalam
#[cfg(feature = "malayalam")]
pub const MALAYALAM: RangeInclusive<u32> = 0x00D00..=0x00D7F;
/// Sinhala
#[cfg(feature = "sinhala")]
pub const SINHALA: RangeInclusive<u32> = 0x00D80..=0x00DFF;
/// Thai
#[cfg(feature = "thai")]
pub const THAI: RangeInclusive<u32> = 0x00E00..=0x00E7F;
/// Lao
#[cfg(feature = "lao")]
pub const LAO: RangeInclusive<u32> = 0x00E80..=0x00EFF;
/// Tibetan
#[cfg(feature = "tibetan")]
pub const TIBETAN: RangeInclusive<u32> = 0x00F00..=0x00FFF;
/// Myanmar
#[cfg(feature = "myanmar")]
pub const MYANMAR: RangeInclusive<u32> = 0x01000..=0x0109F;
/// Georgian
#[cfg(feature = "georgian")]
pub const GEORGIAN: RangeInclusive<u32> = 0x010A0..=0x010FF;
/// Hangul Jamo
#[cfg(feature = "hangul-jamo")]
pub const HANGUL_JAMO: RangeInclusive<u32> = 0x01100..=0x011FF;
/// Ethiopic
#[cfg(feature = "ethiopic")]
pub const ETHIOPIC: RangeInclusive<u32> = 0x01200..=0x0137F;
/// Ethiopic Supplement
#[cfg(feature = "ethiopic-supplement")]
pub const ETHIOPIC_SUPPLEMENT: RangeInclusive<u32> = 0x01380..=0x0139F;
/// Cherokee
#[cfg(feature = "cherokee")]
pub const CHEROKEE: RangeInclusive<u32> = 0x013A0..=0x013FF;
/// Unified Canadian Aboriginal Syllabics
#[cfg(feature = "unified-canadian-aboriginal-syllabics")]
pub const UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS: RangeInclusive<u32> = 0x01400..=0x0167F;
/// Ogham
#[cfg(feature = "ogham")]
pub const OGHAM: RangeInclusive<u32> = 0x01680..=0x0169F;
/// Runic
#[cfg(feature = "runic")]
pub const RUNIC: RangeInclusive<u32> = 0x016A0..=0x016FF;
/// Tagalog
#[cfg(feature = "tagalog")]
pub const TAGALOG: RangeInclusive<u32> = 0x01700..=0x0171F;
/// Hanunoo
#[cfg(feature = "hanunoo")]
pub const HANUNOO: RangeInclusive<u32> = 0x01720..=0x0173F;
/// Buhid
#[cfg(feature = "buhid")]
pub const BUHID: RangeInclusive<u32> = 0x01740..=0x0175F;
/// Tagbanwa
#[cfg(feature = "tagbanwa")]
pub const TAGBANWA: RangeInclusive<u32> = 0x01760..=0x0177F;
/// Khmer
#[cfg(feature = "khmer")]
pub const KHMER: RangeInclusive<u32> = 0x01780..=0x017FF;
/// Mongolian
#[cfg(feature = "mongolian")]
pub const MONGOLIAN: RangeInclusive<u32> = 0x01800..=0x018AF;
/// Unified Canadian Aboriginal Syllabics Extended
#[cfg(feature = "unified-canadian-aboriginal-syllabics-extended")]
pub const UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED: RangeInclusive<u32> = 0x018B0..=0x018FF;
/// Limbu
#[cfg(feature = "limbu")]
pub const LIMBU: RangeInclusive<u32> = 0x01900..=0x0194F;
/// Tai Le
#[cfg(feature = "tai-le")]
pub const TAI_LE: RangeInclusive<u32> = 0x01950..=0x0197F;
/// New Tai Lue
#[cfg(feature = "new-tai-lue")]
pub const NEW_TAI_LUE: RangeInclusive<u32> = 0x01980..=0x019DF;
/// Khmer Symbols
#[cfg(feature = "khmer-symbols")]
pub const KHMER_SYMBOLS: RangeInclusive<u32> = 0x019E0..=0x019FF;
/// Buginese
#[cfg(feature = "buginese")]
pub const BUGINESE: RangeInclusive<u32> = 0x01A00..=0x01A1F;
/// Tai Tham
#[cfg(feature = "tai-tham")]
pub const TAI_THAM: RangeInclusive<u32> = 0x01A20..=0x01AAF;
/// Combining Diacritical Marks Extended
#[cfg(feature = "combining-diacritical-marks-extended")]
pub const COMBINING_DIACRITICAL_MARKS_EXTENDED: RangeInclusive<u32> = 0x01AB0..=0x01AFF;
/// Balinese
#[cfg(feature = "balinese")]
pub const BALINESE: RangeInclusive<u32> = 0x01B00..=0x01B7F;
/// Sundanese
#[cfg(feature = "sundanese")]
pub const SUNDANESE: RangeInclusive<u32> = 0x01B80..=0x01BBF;
/// Batak
#[cfg(feature = "batak")]
pub const BATAK: RangeInclusive<u32> = 0x01BC0..=0x01BFF;
/// Lepcha
#[cfg(feature = "lepcha")]
pub const LEPCHA: RangeInclusive<u32> = 0x01C00..=0x01C4F;
/// Ol Chiki
#[cfg(feature = "ol-chiki")]
pub const OL_CHIKI: RangeInclusive<u32> = 0x01C50..=0x01C7F;
/// Cyrillic Extended-C
#[cfg(feature = "cyrillic-extended-c")]
pub const CYRILLIC_EXTENDED_C: RangeInclusive<u32> = 0x01C80..=0x01C8F;
/// Georgian Extended
#[cfg(feature = "georgian-extended")]
pub const GEORGIAN_EXTENDED: RangeInclusive<u32> = 0x01C90..=0x01CBF;
/// Sundanese Supplement
#[cfg(feature = "sundanese-supplement")]
pub const SUNDANESE_SUPPLEMENT: RangeInclusive<u32> = 0x01CC0..=0x01CCF;
/// Vedic Extensions
#[cfg(feature = "vedic-extensions")]
pub const VEDIC_EXTENSIONS: RangeInclusive<u32> = 0x01CD0..=0x01CFF;
/// Phonetic Extensions
#[cfg(feature = "phonetic-extensions")]
pub const PHONETIC_EXTENSIONS: RangeInclusive<u32> = 0x01D00..=0x01D7F;
/// Phonetic Extensions Supplement
#[cfg(feature = "phonetic-extensions-supplement")]
pub const PHONETIC_EXTENSIONS_SUPPLEMENT: RangeInclusive<u32> = 0x01D80..=0x01DBF;
/// Combining Diacritical Marks Supplement
#[cfg(feature = "combining-diacritical-marks-supplement")]
pub const COMBINING_DIACRITICAL_MARKS_SUPPLEMENT: RangeInclusive<u32> = 0x01DC0..=0x01DFF;
/// Latin Extended Additional
#[cfg(feature = "latin-extended-additional")]
pub const LATIN_EXTENDED_ADDITIONAL: RangeInclusive<u32> = 0x01E00..=0x01EFF;
/// Greek Extended
#[cfg(feature = "greek-extended")]
pub const GREEK_EXTENDED: RangeInclusive<u32> = 0x01F00..=0x01FFF;
/// General Punctuation
#[cfg(feature = "general-punctuation")]
pub const GENERAL_PUNCTUATION: RangeInclusive<u32> = 0x02000..=0x0206F;
/// Superscripts and Subscripts
#[cfg(feature = "superscripts-and-subscripts")]
pub const SUPERSCRIPTS_AND_SUBSCRIPTS: RangeInclusive<u32> = 0x02070..=0x0209F;
/// Currency Symbols
#[cfg(feature = "currency-symbols")]
pub const CURRENCY_SYMBOLS: RangeInclusive<u32> = 0x020A0..=0x020CF;
/// Combining Diacritical Marks for Symbols
#[cfg(feature = "combining-diacritical-marks-for-symbols")]
pub const COMBINING_DIACRITICAL_MARKS_FOR_SYMBOLS: RangeInclusive<u32> = 0x020D0..=0x020FF;
/// Letterlike Symbols
#[cfg(feature = "letterlike-symbols")]
pub const LETTERLIKE_SYMBOLS: RangeInclusive<u32> = 0x02100..=0x0214F;
/// Number Forms
#[cfg(feature = "number-forms")]
pub const NUMBER_FORMS: RangeInclusive<u32> = 0x02150..=0x0218F;
/// Arrows
#[cfg(feature = "arrows")]
pub const ARROWS: RangeInclusive<u32> = 0x02190..=0x021FF;
/// Mathematical Operators
#[cfg(feature = "mathematical-operators")]
pub const MATHEMATICAL_OPERATORS: RangeInclusive<u32> = 0x02200..=0x022FF;
/// Miscellaneous Technical
#[cfg(feature = "miscellaneous-technical")]
pub const MISCELLANEOUS_TECHNICAL: RangeInclusive<u32> = 0x02300..=0x023FF;
/// Control Pictures
#[cfg(feature = "control-pictures")]
pub const CONTROL_PICTURES: RangeInclusive<u32> = 0x02400..=0x0243F;
/// Optical Character Recognition
#[cfg(feature = "optical-character-recognition")]
pub const OPTICAL_CHARACTER_RECOGNITION: RangeInclusive<u32> = 0x02440..=0x0245F;
/// Enclosed Alphanumerics
#[cfg(feature = "enclosed-alphanumerics")]
pub const ENCLOSED_ALPHANUMERICS: RangeInclusive<u32> = 0x02460..=0x024FF;
/// Box Drawing
#[cfg(feature = "box-drawing")]
pub const BOX_DRAWING: RangeInclusive<u32> = 0x02500..=0x0257F;
/// Block Elements
#[cfg(feature = "block-elements")]
pub const BLOCK_ELEMENTS: RangeInclusive<u32> = 0x02580..=0x0259F;
/// Geometric Shapes
#[cfg(feature = "geometric-shapes")]
pub const GEOMETRIC_SHAPES: RangeInclusive<u32> = 0x025A0..=0x025FF;
/// Miscellaneous Symbols
#[cfg(feature = "miscellaneous-symbols")]
pub const MISCELLANEOUS_SYMBOLS: RangeInclusive<u32> = 0x02600..=0x026FF;
/// Dingbats
#[cfg(feature = "dingbats")]
pub const DINGBATS: RangeInclusive<u32> = 0x02700..=0x027BF;
/// Miscellaneous Mathematical Symbols-A
#[cfg(feature = "miscellaneous-mathematical-symbols-a")]
pub const MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A: RangeInclusive<u32> = 0x027C0..=0x027EF;
/// Supplemental Arrows-A
#[cfg(feature = "supplemental-arrows-a")]
pub const SUPPLEMENTAL_ARROWS_A: RangeInclusive<u32> = 0x027F0..=0x027FF;
/// Braille Patterns
#[cfg(feature = "braille-patterns")]
pub const BRAILLE_PATTERNS: RangeInclusive<u32> = 0x02800..=0x028FF;
/// Supplemental Arrows-B
#[cfg(feature = "supplemental-arrows-b")]
pub const SUPPLEMENTAL_ARROWS_B: RangeInclusive<u32> = 0x02900..=0x0297F;
/// Miscellaneous Mathematical Symbols-B
#[cfg(feature = "miscellaneous-mathematical-symbols-b")]
pub const MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B: RangeInclusive<u32> = 0x02980..=0x029FF;
/// Supplemental Mathematical Operators
#[cfg(feature = "supplemental-mathematical-operators")]
pub const SUPPLEMENTAL_MATHEMATICAL_OPERATORS: RangeInclusive<u32> = 0x02A00..=0x02AFF;
/// Miscellaneous Symbols and Arrows
#[cfg(feature = "miscellaneous-symbols-and-arrows")]
pub const MISCELLANEOUS_SYMBOLS_AND_ARROWS: RangeInclusive<u32> = 0x02B00..=0x02BFF;
/// Glagolitic
#[cfg(feature = "glagolitic")]
pub const GLAGOLITIC: RangeInclusive<u32> = 0x02C00..=0x02C5F;
/// Latin Extended-C
#[cfg(feature = "latin-extended-c")]
pub const LATIN_EXTENDED_C: RangeInclusive<u32> = 0x02C60..=0x02C7F;
/// Coptic
#[cfg(feature = "coptic")]
pub const COPTIC: RangeInclusive<u32> = 0x02C80..=0x02CFF;
/// Georgian Supplement
#[cfg(feature = "georgian-supplement")]
pub const GEORGIAN_SUPPLEMENT: RangeInclusive<u32> = 0x02D00..=0x02D2F;
/// Tifinagh
#[cfg(feature = "tifinagh")]
pub const TIFINAGH: RangeInclusive<u32> = 0x02D30..=0x02D7F;
/// Ethiopic Extended
#[cfg(feature = "ethiopic-extended")]
pub const ETHIOPIC_EXTENDED: RangeInclusive<u32> = 0x02D80..=0x02DDF;
/// Cyrillic Extended-A
#[cfg(feature = "cyrillic-extended-a")]
pub const CYRILLIC_EXTENDED_A: RangeInclusive<u32> = 0x02DE0..=0x02DFF;
/// Supplemental Punctuation
#[cfg(feature = "supplemental-punctuation")]
pub const SUPPLEMENTAL_PUNCTUATION: RangeInclusive<u32> = 0x02E00..=0x02E7F;
/// CJK Radicals Supplement
#[cfg(feature = "cjk-radicals-supplement")]
pub const CJK_RADICALS_SUPPLEMENT: RangeInclusive<u32> = 0x02E80..=0x02EFF;
/// Kangxi Radicals
#[cfg(feature = "kangxi-radicals")]
pub const KANGXI_RADICALS: RangeInclusive<u32> = 0x02F00..=0x02FDF;
/// Ideographic Description Characters
#[cfg(feature = "ideographic-description-characters")]
pub const IDEOGRAPHIC_DESCRIPTION_CHARACTERS: RangeInclusive<u32> = 0x02FF0..=0x02FFF;
/// CJK Symbols and Punctuation
#[cfg(feature = "cjk-symbols-and-punctuation")]
pub const CJK_SYMBOLS_AND_PUNCTUATION: RangeInclusive<u32> = 0x03000..=0x0303F;
/// Hiragana
#[cfg(feature = "hiragana")]
pub const HIRAGANA: RangeInclusive<u32> = 0x03040..=0x0309F;
/// Katakana
#[cfg(feature = "katakana")]
pub const KATAKANA: RangeInclusive<u32> = 0x030A0..=0x030FF;
/// Bopomofo
#[cfg(feature = "bopomofo")]
pub const BOPOMOFO: RangeInclusive<u32> = 0x03100..=0x0312F;
/// Hangul Compatibility Jamo
#[cfg(feature = "hangul-compatibility-jamo")]
pub const HANGUL_COMPATIBILITY_JAMO: RangeInclusive<u32> = 0x03130..=0x0318F;
/// Kanbun
#[cfg(feature = "kanbun")]
pub const KANBUN: RangeInclusive<u32> = 0x03190..=0x0319F;
/// Bopomofo Extended
#[cfg(feature = "bopomofo-extended")]
pub const BOPOMOFO_EXTENDED: RangeInclusive<u32> = 0x031A0..=0x031BF;
/// CJK Strokes
#[cfg(feature = "cjk-strokes")]
pub const CJK_STROKES: RangeInclusive<u32> = 0x031C0..=0x031EF;
/// Katakana Phonetic Extensions
#[cfg(feature = "katakana-phonetic-extensions")]
pub const KATAKANA_PHONETIC_EXTENSIONS: RangeInclusive<u32> = 0x031F0..=0x031FF;
/// Enclosed CJK Letters and Months
#[cfg(feature = "enclosed-cjk-letters-and-months")]
pub const ENCLOSED_CJK_LETTERS_AND_MONTHS: RangeInclusive<u32> = 0x03200..=0x032FF;
/// CJK Compatibility
#[cfg(feature = "cjk-compatibility")]
pub const CJK_COMPATIBILITY: RangeInclusive<u32> = 0x03300..=0x033FF;
/// CJK Unified Ideographs Extension A
#[cfg(feature = "cjk-unified-ideographs-extension-a")]
pub const CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A: RangeInclusive<u32> = 0x03400..=0x04DBF;
/// Yijing Hexagram Symbols
#[cfg(feature = "yijing-hexagram-symbols")]
pub const YIJING_HEXAGRAM_SYMBOLS: RangeInclusive<u32> = 0x04DC0..=0x04DFF;
/// CJK Unified Ideographs
#[cfg(feature = "cjk-unified-ideographs")]
pub const CJK_UNIFIED_IDEOGRAPHS: RangeInclusive<u32> = 0x04E00..=0x09FFF;
/// Yi Syllables
#[cfg(feature = "yi-syllables")]
pub const YI_SYLLABLES: RangeInclusive<u32> = 0x0A000..=0x0A48F;
/// Yi Radicals
#[cfg(feature = "yi-radicals")]
pub const YI_RADICALS: RangeInclusive<u32> = 0x0A490..=0x0A4CF;
/// Lisu
#[cfg(feature = "lisu")]
pub const LISU: RangeInclusive<u32> = 0x0A4D0..=0x0A4FF;
/// Vai
#[cfg(feature = "vai")]
pub const VAI: RangeInclusive<u32> = 0x0A500..=0x0A63F;
/// Cyrillic Extended-B
#[cfg(feature = "cyrillic-extended-b")]
pub const CYRILLIC_EXTENDED_B: RangeInclusive<u32> = 0x0A640..=0x0A69F;
/// Bamum
#[cfg(feature = "bamum")]
pub const BAMUM: RangeInclusive<u32> = 0x0A6A0..=0x0A6FF;
/// Modifier Tone Letters
#[cfg(feature = "modifier-tone-letters")]
pub const MODIFIER_TONE_LETTERS: RangeInclusive<u32> = 0x0A700..=0x0A71F;
/// Latin Extended-D
#[cfg(feature = "latin-extended-d")]
pub const LATIN_EXTENDED_D: RangeInclusive<u32> = 0x0A720..=0x0A7FF;
/// Syloti Nagri
#[cfg(feature = "syloti-nagri")]
pub const SYLOTI_NAGRI: RangeInclusive<u32> = 0x0A800..=0x0A82F;
/// Common Indic Number Forms
#[cfg(feature = "common-indic-number-forms")]
pub const COMMON_INDIC_NUMBER_FORMS: RangeInclusive<u32> = 0x0A830..=0x0A83F;
/// Phags-pa
#[cfg(feature = "phags-pa")]
pub const PHAGS_PA: RangeInclusive<u32> = 0x0A840..=0x0A87F;
/// Saurashtra
#[cfg(feature = "saurashtra")]
pub const SAURASHTRA: RangeInclusive<u32> = 0x0A880..=0x0A8DF;
/// Devanagari Extended
#[cfg(feature = "devanagari-extended")]
pub const DEVANAGARI_EXTENDED: RangeInclusive<u32> = 0x0A8E0..=0x0A8FF;
/// Kayah Li
#[cfg(feature = "kayah-li")]
pub const KAYAH_LI: RangeInclusive<u32> = 0x0A900..=0x0A92F;
/// Rejang
#[cfg(feature = "rejang")]
pub const REJANG: RangeInclusive<u32> = 0x0A930..=0x0A95F;
/// Hangul Jamo Extended-A
#[cfg(feature = "hangul-jamo-extended-a")]
pub const HANGUL_JAMO_EXTENDED_A: RangeInclusive<u32> = 0x0A960..=0x0A97F;
/// Javanese
#[cfg(feature = "javanese")]
pub const JAVANESE: RangeInclusive<u32> = 0x0A980..=0x0A9DF;
/// Myanmar Extended-B
#[cfg(feature = "myanmar-extended-b")]
pub const MYANMAR_EXTENDED_B: RangeInclusive<u32> = 0x0A9E0..=0x0A9FF;
/// Cham
#[cfg(feature = "cham")]
pub const CHAM: RangeInclusive<u32> = 0x0AA00..=0x0AA5F;
/// Myanmar Extended-A
#[cfg(feature = "myanmar-extended-a")]
pub const MYANMAR_EXTENDED_A: RangeInclusive<u32> = 0x0AA60..=0x0AA7F;
/// Tai Viet
#[cfg(feature = "tai-viet")]
pub const TAI_VIET: RangeInclusive<u32> = 0x0AA80..=0x0AADF;
/// Meetei Mayek Extensions
#[cfg(feature = "meetei-mayek-extensions")]
pub const MEETEI_MAYEK_EXTENSIONS: RangeInclusive<u32> = 0x0AAE0..=0x0AAFF;
/// Ethiopic Extended-A
#[cfg(feature = "ethiopic-extended-a")]
pub const ETHIOPIC_EXTENDED_A: RangeInclusive<u32> = 0x0AB00..=0x0AB2F;
/// Latin Extended-E
#[cfg(feature = "latin-extended-e")]
pub const LATIN_EXTENDED_E: RangeInclusive<u32> = 0x0AB30..=0x0AB6F;
/// Cherokee Supplement
#[cfg(feature = "cherokee-supplement")]
pub const CHEROKEE_SUPPLEMENT: RangeInclusive<u32> = 0x0AB70..=0x0ABBF;
/// Meetei Mayek
#[cfg(feature = "meetei-mayek")]
pub const MEETEI_MAYEK: RangeInclusive<u32> = 0x0ABC0..=0x0ABFF;
/// Hangul Syllables
#[cfg(feature = "hangul-syllables")]
pub const HANGUL_SYLLABLES: RangeInclusive<u32> = 0x0AC00..=0x0D7AF;
/// Hangul Jamo Extended-B
#[cfg(feature = "hangul-jamo-extended-b")]
pub const HANGUL_JAMO_EXTENDED_B: RangeInclusive<u32> = 0x0D7B0..=0x0D7FF;
/// High Surrogates
#[cfg(feature = "high-surrogates")]
pub const HIGH_SURROGATES: RangeInclusive<u32> = 0x0D800..=0x0DB7F;
/// High Private Use Surrogates
#[cfg(feature = "high-private-use-surrogates")]
pub const HIGH_PRIVATE_USE_SURROGATES: RangeInclusive<u32> = 0x0DB80..=0x0DBFF;
/// Low Surrogates
#[cfg(feature = "low-surrogates")]
pub const LOW_SURROGATES: RangeInclusive<u32> = 0x0DC00..=0x0DFFF;
/// Private Use Area
#[cfg(feature = "private-use-area")]
pub const PRIVATE_USE_AREA: RangeInclusive<u32> = 0x0E000..=0x0F8FF;
/// CJK Compatibility Ideographs
#[cfg(feature = "cjk-compatibility-ideographs")]
pub const CJK_COMPATIBILITY_IDEOGRAPHS: RangeInclusive<u32> = 0x0F900..=0x0FAFF;
/// Alphabetic Presentation Forms
#[cfg(feature = "alphabetic-presentation-forms")]
pub const ALPHABETIC_PRESENTATION_FORMS: RangeInclusive<u32> = 0x0FB00..=0x0FB4F;
/// Arabic Presentation Forms-A
#[cfg(feature = "arabic-presentation-forms-a")]
pub const ARABIC_PRESENTATION_FORMS_A: RangeInclusive<u32> = 0x0FB50..=0x0FDFF;
/// Variation Selectors
#[cfg(feature = "variation-selectors")]
pub const VARIATION_SELECTORS: RangeInclusive<u32> = 0x0FE00..=0x0FE0F;
/// Vertical Forms
#[cfg(feature = "vertical-forms")]
pub const VERTICAL_FORMS: RangeInclusive<u32> = 0x0FE10..=0x0FE1F;
/// Combining Half Marks
#[cfg(feature = "combining-half-marks")]
pub const COMBINING_HALF_MARKS: RangeInclusive<u32> = 0x0FE20..=0x0FE2F;
/// CJK Compatibility Forms
#[cfg(feature = "cjk-compatibility-forms")]
pub const CJK_COMPATIBILITY_FORMS: RangeInclusive<u32> = 0x0FE30..=0x0FE4F;
/// Small Form Variants
#[cfg(feature = "small-form-variants")]
pub const SMALL_FORM_VARIANTS: RangeInclusive<u32> = 0x0FE50..=0x0FE6F;
/// Arabic Presentation Forms-B
#[cfg(feature = "arabic-presentation-forms-b")]
pub const ARABIC_PRESENTATION_FORMS_B: RangeInclusive<u32> = 0x0FE70..=0x0FEFF;
/// Halfwidth and Fullwidth Forms
#[cfg(feature = "halfwidth-and-fullwidth-forms")]
pub const HALFWIDTH_AND_FULLWIDTH_FORMS: RangeInclusive<u32> = 0x0FF00..=0x0FFEF;
/// Specials
#[cfg(feature = "specials")]
pub const SPECIALS: RangeInclusive<u32> = 0x0FFF0..=0x0FFFF;
/// Linear B Syllabary
#[cfg(feature = "linear-b-syllabary")]
pub const LINEAR_B_SYLLABARY: RangeInclusive<u32> = 0x10000..=0x1007F;
/// Linear B Ideograms
#[cfg(feature = "linear-b-ideograms")]
pub const LINEAR_B_IDEOGRAMS: RangeInclusive<u32> = 0x10080..=0x100FF;
/// Aegean Numbers
#[cfg(feature = "aegean-numbers")]
pub const AEGEAN_NUMBERS: RangeInclusive<u32> = 0x10100..=0x1013F;
/// Ancient Greek Numbers
#[cfg(feature = "ancient-greek-numbers")]
pub const ANCIENT_GREEK_NUMBERS: RangeInclusive<u32> = 0x10140..=0x1018F;
/// Ancient Symbols
#[cfg(feature = "ancient-symbols")]
pub const ANCIENT_SYMBOLS: RangeInclusive<u32> = 0x10190..=0x101CF;
/// Phaistos Disc
#[cfg(feature = "phaistos-disc")]
pub const PHAISTOS_DISC: RangeInclusive<u32> = 0x101D0..=0x101FF;
/// Lycian
#[cfg(feature = "lycian")]
pub const LYCIAN: RangeInclusive<u32> = 0x10280..=0x1029F;
/// Carian
#[cfg(feature = "carian")]
pub const CARIAN: RangeInclusive<u32> = 0x102A0..=0x102DF;
/// Coptic Epact Numbers
#[cfg(feature = "coptic-epact-numbers")]
pub const COPTIC_EPACT_NUMBERS: RangeInclusive<u32> = 0x102E0..=0x102FF;
/// Old Italic
#[cfg(feature = "old-italic")]
pub const OLD_ITALIC: RangeInclusive<u32> = 0x10300..=0x1032F;
/// Gothic
#[cfg(feature = "gothic")]
pub const GOTHIC: RangeInclusive<u32> = 0x10330..=0x1034F;
/// Old Permic
#[cfg(feature = "old-permic")]
pub const OLD_PERMIC: RangeInclusive<u32> = 0x10350..=0x1037F;
/// Ugaritic
#[cfg(feature = "ugaritic")]
pub const UGARITIC: RangeInclusive<u32> = 0x10380..=0x1039F;
/// Old Persian
#[cfg(feature = "old-persian")]
pub const OLD_PERSIAN: RangeInclusive<u32> = 0x103A0..=0x103DF;
/// Deseret
#[cfg(feature = "deseret")]
pub const DESERET: RangeInclusive<u32> = 0x10400..=0x1044F;
/// Shavian
#[cfg(feature = "shavian")]
pub const SHAVIAN: RangeInclusive<u32> = 0x10450..=0x1047F;
/// Osmanya
#[cfg(feature = "osmanya")]
pub const OSMANYA: RangeInclusive<u32> = 0x10480..=0x104AF;
/// Osage
#[cfg(feature = "osage")]
pub const OSAGE: RangeInclusive<u32> = 0x104B0..=0x104FF;
/// Elbasan
#[cfg(feature = "elbasan")]
pub const ELBASAN: RangeInclusive<u32> = 0x10500..=0x1052F;
/// Caucasian Albanian
#[cfg(feature = "caucasian-albanian")]
pub const CAUCASIAN_ALBANIAN: RangeInclusive<u32> = 0x10530..=0x1056F;
/// Vithkuqi
#[cfg(feature = "vithkuqi")]
pub const VITHKUQI: RangeInclusive<u32> = 0x10570..=0x105BF;
/// Linear A
#[cfg(feature = "linear-a")]
pub const LINEAR_A: RangeInclusive<u32> = 0x10600..=0x1077F;
/// Latin Extended-F
#[cfg(feature = "latin-extended-f")]
pub const LATIN_EXTENDED_F: RangeInclusive<u32> = 0x10780..=0x107BF;
/// Cypriot Syllabary
#[cfg(feature = "cypriot-syllabary")]
pub const CYPRIOT_SYLLABARY: RangeInclusive<u32> = 0x10800..=0x1083F;
/// Imperial Aramaic
#[cfg(feature = "imperial-aramaic")]
pub const IMPERIAL_ARAMAIC: RangeInclusive<u32> = 0x10840..=0x1085F;
/// Palmyrene
#[cfg(feature = "palmyrene")]
pub const PALMYRENE: RangeInclusive<u32> = 0x10860..=0x1087F;
/// Nabataean
#[cfg(feature = "nabataean")]
pub const NABATAEAN: RangeInclusive<u32> = 0x10880..=0x108AF;
/// Hatran
#[cfg(feature = "hatran")]
pub const HATRAN: RangeInclusive<u32> = 0x108E0..=0x108FF;
/// Phoenician
#[cfg(feature = "phoenician")]
pub const PHOENICIAN: RangeInclusive<u32> = 0x10900..=0x1091F;
/// Lydian
#[cfg(feature = "lydian")]
pub const LYDIAN: RangeInclusive<u32> = 0x10920..=0x1093F;
/// Meroitic Hieroglyphs
#[cfg(feature = "meroitic-hieroglyphs")]
pub const MEROITIC_HIEROGLYPHS: RangeInclusive<u32> = 0x10980..=0x1099F;
/// Meroitic Cursive
#[cfg(feature = "meroitic-cursive")]
pub const MEROITIC_CURSIVE: RangeInclusive<u32> = 0x109A0..=0x109FF;
/// Kharoshthi
#[cfg(feature = "kharoshthi")]
pub const KHAROSHTHI: RangeInclusive<u32> = 0x10A00..=0x10A5F;
/// Old South Arabian
#[cfg(feature = "old-south-arabian")]
pub const OLD_SOUTH_ARABIAN: RangeInclusive<u32> = 0x10A60..=0x10A7F;
/// Old North Arabian
#[cfg(feature = "old-north-arabian")]
pub const OLD_NORTH_ARABIAN: RangeInclusive<u32> = 0x10A80..=0x10A9F;
/// Manichaean
#[cfg(feature = "manichaean")]
pub const MANICHAEAN: RangeInclusive<u32> = 0x10AC0..=0x10AFF;
/// Avestan
#[cfg(feature = "avestan")]
pub const AVESTAN: RangeInclusive<u32> = 0x10B00..=0x10B3F;
/// Inscriptional Parthian
#[cfg(feature = "inscriptional-parthian")]
pub const INSCRIPTIONAL_PARTHIAN: RangeInclusive<u32> = 0x10B40..=0x10B5F;
/// Inscriptional Pahlavi
#[cfg(feature = "inscriptional-pahlavi")]
pub const INSCRIPTIONAL_PAHLAVI: RangeInclusive<u32> = 0x10B60..=0x10B7F;
/// Psalter Pahlavi
#[cfg(feature = "psalter-pahlavi")]
pub const PSALTER_PAHLAVI: RangeInclusive<u32> = 0x10B80..=0x10BAF;
/// Old Turkic
#[cfg(feature = "old-turkic")]
pub const OLD_TURKIC: RangeInclusive<u32> = 0x10C00..=0x10C4F;
/// Old Hungarian
#[cfg(feature = "old-hungarian")]
pub const OLD_HUNGARIAN: RangeInclusive<u32> = 0x10C80..=0x10CFF;
/// Hanifi Rohingya
#[cfg(feature = "hanifi-rohingya")]
pub const HANIFI_ROHINGYA: RangeInclusive<u32> = 0x10D00..=0x10D3F;
/// Rumi Numeral Symbols
#[cfg(feature = "rumi-numeral-symbols")]
pub const RUMI_NUMERAL_SYMBOLS: RangeInclusive<u32> = 0x10E60..=0x10E7F;
/// Yezidi
#[cfg(feature = "yezidi")]
pub const YEZIDI: RangeInclusive<u32> = 0x10E80..=0x10EBF;
/// Arabic Extended-C
#[cfg(feature = "arabic-extended-c")]
pub const ARABIC_EXTENDED_C: RangeInclusive<u32> = 0x10EC0..=0x10EFF;
/// Old Sogdian
#[cfg(feature = "old-sogdian")]
pub const OLD_SOGDIAN: RangeInclusive<u32> = 0x10F00..=0x10F2F;
/// Sogdian
#[cfg(feature = "sogdian")]
pub const SOGDIAN: RangeInclusive<u32> = 0x10F30..=0x10F6F;
/// Old Uyghur
#[cfg(feature = "old-uyghur")]
pub const OLD_UYGHUR: RangeInclusive<u32> = 0x10F70..=0x10FAF;
/// Chorasmian
#[cfg(feature = "chorasmian")]
pub const CHORASMIAN: RangeInclusive<u32> = 0x10FB0..=0x10FDF;
/// Elymaic
#[cfg(feature = "elymaic")]
pub const ELYMAIC: RangeInclusive<u32> = 0x10FE0..=0x10FFF;
/// Brahmi
#[cfg(feature = "brahmi")]
pub const BRAHMI: RangeInclusive<u32> = 0x11000..=0x1107F;
/// Kaithi
#[cfg(feature = "kaithi")]
pub const KAITHI: RangeInclusive<u32> = 0x11080..=0x110CF;
/// Sora Sompeng
#[cfg(feature = "sora-sompeng")]
pub const SORA_SOMPENG: RangeInclusive<u32> = 0x110D0..=0x110FF;
/// Chakma
#[cfg(feature = "chakma")]
pub const CHAKMA: RangeInclusive<u32> = 0x11100..=0x1114F;
/// Mahajani
#[cfg(feature = "mahajani")]
pub const MAHAJANI: RangeInclusive<u32> = 0x11150..=0x1117F;
/// Sharada
#[cfg(feature = "sharada")]
pub const SHARADA: RangeInclusive<u32> = 0x11180..=0x111DF;
/// Sinhala Archaic Numbers
#[cfg(feature = "sinhala-archaic-numbers")]
pub const SINHALA_ARCHAIC_NUMBERS: RangeInclusive<u32> = 0x111E0..=0x111FF;
/// Khojki
#[cfg(feature = "khojki")]
pub const KHOJKI: RangeInclusive<u32> = 0x11200..=0x1124F;
/// Multani
#[cfg(feature = "multani")]
pub const MULTANI: RangeInclusive<u32> = 0x11280..=0x112AF;
/// Khudawadi
#[cfg(feature = "khudawadi")]
pub const KHUDAWADI: RangeInclusive<u32> = 0x112B0..=0x112FF;
/// Grantha
#[cfg(feature = "grantha")]
pub const GRANTHA: RangeInclusive<u32> = 0x11300..=0x1137F;
/// Newa
#[cfg(feature = "newa")]
pub const NEWA: RangeInclusive<u32> = 0x11400..=0x1147F;
/// Tirhuta
#[cfg(feature = "tirhuta")]
pub const TIRHUTA: RangeInclusive<u32> = 0x11480..=0x114DF;
/// Siddham
#[cfg(feature = "siddham")]
pub const SIDDHAM: RangeInclusive<u32> = 0x11580..=0x115FF;
/// Modi
#[cfg(feature = "modi")]
pub const MODI: RangeInclusive<u32> = 0x11600..=0x1165F;
/// Mongolian Supplement
#[cfg(feature = "mongolian-supplement")]
pub const MONGOLIAN_SUPPLEMENT: RangeInclusive<u32> = 0x11660..=0x1167F;
/// Takri
#[cfg(feature = "takri")]
pub const TAKRI: RangeInclusive<u32> = 0x11680..=0x116CF;
/// Ahom
#[cfg(feature = "ahom")]
pub const AHOM: RangeInclusive<u32> = 0x11700..=0x1174F;
/// Dogra
#[cfg(feature = "dogra")]
pub const DOGRA: RangeInclusive<u32> = 0x11800..=0x1184F;
/// Warang Citi
#[cfg(feature = "warang-citi")]
pub const WARANG_CITI: RangeInclusive<u32> = 0x118A0..=0x118FF;
/// Dives Akuru
#[cfg(feature = "dives-akuru")]
pub const DIVES_AKURU: RangeInclusive<u32> = 0x11900..=0x1195F;
/// Nandinagari
#[cfg(feature = "nandinagari")]
pub const NANDINAGARI: RangeInclusive<u32> = 0x119A0..=0x119FF;
/// Zanabazar Square
#[cfg(feature = "zanabazar-square")]
pub const ZANABAZAR_SQUARE: RangeInclusive<u32> = 0x11A00..=0x11A4F;
/// Soyombo
#[cfg(feature = "soyombo")]
pub const SOYOMBO: RangeInclusive<u32> = 0x11A50..=0x11AAF;
/// Unified Canadian Aboriginal Syllabics Extended-A
#[cfg(feature = "unified-canadian-aboriginal-syllabics-extended-a")]
pub const UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_A: RangeInclusive<u32> = 0x11AB0..=0x11ABF;
/// Pau Cin Hau
#[cfg(feature = "pau-cin-hau")]
pub const PAU_CIN_HAU: RangeInclusive<u32> = 0x11AC0..=0x11AFF;
/// Devanagari Extended-A
#[cfg(feature = "devanagari-extended-a")]
pub const DEVANAGARI_EXTENDED_A: RangeInclusive<u32> = 0x11B00..=0x11B5F;
/// Bhaiksuki
#[cfg(feature = "bhaiksuki")]
pub const BHAIKSUKI: RangeInclusive<u32> = 0x11C00..=0x11C6F;
/// Marchen
#[cfg(feature = "marchen")]
pub const MARCHEN: RangeInclusive<u32> = 0x11C70..=0x11CBF;
/// Masaram Gondi
#[cfg(feature = "masaram-gondi")]
pub const MASARAM_GONDI: RangeInclusive<u32> = 0x11D00..=0x11D5F;
/// Gunjala Gondi
#[cfg(feature = "gunjala-gondi")]
pub const GUNJALA_GONDI: RangeInclusive<u32> = 0x11D60..=0x11DAF;
/// Makasar
#[cfg(feature = "makasar")]
pub const MAKASAR: RangeInclusive<u32> = 0x11EE0..=0x11EFF;
/// Kawi
#[cfg(feature = "kawi")]
pub const KAWI: RangeInclusive<u32> = 0x11F00..=0x11F5F;
/// Lisu Supplement
#[cfg(feature = "lisu-supplement")]
pub const LISU_SUPPLEMENT: RangeInclusive<u32> = 0x11FB0..=0x11FBF;
/// Tamil Supplement
#[cfg(feature = "tamil-supplement")]
pub const TAMIL_SUPPLEMENT: RangeInclusive<u32> = 0x11FC0..=0x11FFF;
/// Cuneiform
#[cfg(feature = "cuneiform")]
pub const CUNEIFORM: RangeInclusive<u32> = 0x12000..=0x123FF;
/// Cuneiform Numbers and Punctuation
#[cfg(feature = "cuneiform-numbers-and-punctuation")]
pub const CUNEIFORM_NUMBERS_AND_PUNCTUATION: RangeInclusive<u32> = 0x12400..=0x1247F;
/// Early Dynastic Cuneiform
#[cfg(feature = "early-dynastic-cuneiform")]
pub const EARLY_DYNASTIC_CUNEIFORM: RangeInclusive<u32> = 0x12480..=0x1254F;
/// Cypro-Minoan
#[cfg(feature = "cypro-minoan")]
pub const CYPRO_MINOAN: RangeInclusive<u32> = 0x12F90..=0x12FFF;
/// Egyptian Hieroglyphs
#[cfg(feature = "egyptian-hieroglyphs")]
pub const EGYPTIAN_HIEROGLYPHS: RangeInclusive<u32> = 0x13000..=0x1342F;
/// Egyptian Hieroglyph Format Controls
#[cfg(feature = "egyptian-hieroglyph-format-controls")]
pub const EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS: RangeInclusive<u32> = 0x13430..=0x1345F;
/// Anatolian Hieroglyphs
#[cfg(feature = "anatolian-hieroglyphs")]
pub const ANATOLIAN_HIEROGLYPHS: RangeInclusive<u32> = 0x14400..=0x1467F;
/// Bamum Supplement
#[cfg(feature = "bamum-supplement")]
pub const BAMUM_SUPPLEMENT: RangeInclusive<u32> = 0x16800..=0x16A3F;
/// Mro
#[cfg(feature = "mro")]
pub const MRO: RangeInclusive<u32> = 0x16A40..=0x16A6F;
/// Tangsa
#[cfg(feature = "tangsa")]
pub const TANGSA: RangeInclusive<u32> = 0x16A70..=0x16ACF;
/// Bassa Vah
#[cfg(feature = "bassa-vah")]
pub const BASSA_VAH: RangeInclusive<u32> = 0x16AD0..=0x16AFF;
/// Pahawh Hmong
#[cfg(feature = "pahawh-hmong")]
pub const PAHAWH_HMONG: RangeInclusive<u32> = 0x16B00..=0x16B8F;
/// Medefaidrin
#[cfg(feature = "medefaidrin")]
pub const MEDEFAIDRIN: RangeInclusive<u32> = 0x16E40..=0x16E9F;
/// Miao
#[cfg(feature = "miao")]
pub const MIAO: RangeInclusive<u32> = 0x16F00..=0x16F9F;
/// Ideographic Symbols and Punctuation
#[cfg(feature = "ideographic-symbols-and-punctuation")]
pub const IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION: RangeInclusive<u32> = 0x16FE0..=0x16FFF;
/// Tangut
#[cfg(feature = "tangut")]
pub const TANGUT: RangeInclusive<u32> = 0x17000..=0x187FF;
/// Tangut Components
#[cfg(feature = "tangut-components")]
pub const TANGUT_COMPONENTS: RangeInclusive<u32> = 0x18800..=0x18AFF;
/// Khitan Small Script
#[cfg(feature = "khitan-small-script")]
pub const KHITAN_SMALL_SCRIPT: RangeInclusive<u32> = 0x18B00..=0x18CFF;
/// Tangut Supplement
#[cfg(feature = "tangut-supplement")]
pub const TANGUT_SUPPLEMENT: RangeInclusive<u32> = 0x18D00..=0x18D7F;
/// Kana Extended-B
#[cfg(feature = "kana-extended-b")]
pub const KANA_EXTENDED_B: RangeInclusive<u32> = 0x1AFF0..=0x1AFFF;
/// Kana Supplement
#[cfg(feature = "kana-supplement")]
pub const KANA_SUPPLEMENT: RangeInclusive<u32> = 0x1B000..=0x1B0FF;
/// Kana Extended-A
#[cfg(feature = "kana-extended-a")]
pub const KANA_EXTENDED_A: RangeInclusive<u32> = 0x1B100..=0x1B12F;
/// Small Kana Extension
#[cfg(feature = "small-kana-extension")]
pub const SMALL_KANA_EXTENSION: RangeInclusive<u32> = 0x1B130..=0x1B16F;
/// Nushu
#[cfg(feature = "nushu")]
pub const NUSHU: RangeInclusive<u32> = 0x1B170..=0x1B2FF;
/// Duployan
#[cfg(feature = "duployan")]
pub const DUPLOYAN: RangeInclusive<u32> = 0x1BC00..=0x1BC9F;
/// Shorthand Format Controls
#[cfg(feature = "shorthand-format-controls")]
pub const SHORTHAND_FORMAT_CONTROLS: RangeInclusive<u32> = 0x1BCA0..=0x1BCAF;
/// Znamenny Musical Notation
#[cfg(feature = "znamenny-musical-notation")]
pub const ZNAMENNY_MUSICAL_NOTATION: RangeInclusive<u32> = 0x1CF00..=0x1CFCF;
/// Byzantine Musical Symbols
#[cfg(feature = "byzantine-musical-symbols")]
pub const BYZANTINE_MUSICAL_SYMBOLS: RangeInclusive<u32> = 0x1D000..=0x1D0FF;
/// Musical Symbols
#[cfg(feature = "musical-symbols")]
pub const MUSICAL_SYMBOLS: RangeInclusive<u32> = 0x1D100..=0x1D1FF;
/// Ancient Greek Musical Notation
#[cfg(feature = "ancient-greek-musical-notation")]
pub const ANCIENT_GREEK_MUSICAL_NOTATION: RangeInclusive<u32> = 0x1D200..=0x1D24F;
/// Kaktovik Numerals
#[cfg(feature = "kaktovik-numerals")]
pub const KAKTOVIK_NUMERALS: RangeInclusive<u32> = 0x1D2C0..=0x1D2DF;
/// Mayan Numerals
#[cfg(feature = "mayan-numerals")]
pub const MAYAN_NUMERALS: RangeInclusive<u32> = 0x1D2E0..=0x1D2FF;
/// Tai Xuan Jing Symbols
#[cfg(feature = "tai-xuan-jing-symbols")]
pub const TAI_XUAN_JING_SYMBOLS: RangeInclusive<u32> = 0x1D300..=0x1D35F;
/// Counting Rod Numerals
#[cfg(feature = "counting-rod-numerals")]
pub const COUNTING_ROD_NUMERALS: RangeInclusive<u32> = 0x1D360..=0x1D37F;
/// Mathematical Alphanumeric Symbols
#[cfg(feature = "mathematical-alphanumeric-symbols")]
pub const MATHEMATICAL_ALPHANUMERIC_SYMBOLS: RangeInclusive<u32> = 0x1D400..=0x1D7FF;
/// Sutton SignWriting
#[cfg(feature = "sutton-signwriting")]
pub const SUTTON_SIGNWRITING: RangeInclusive<u32> = 0x1D800..=0x1DAAF;
/// Latin Extended-G
#[cfg(feature = "latin-extended-g")]
pub const LATIN_EXTENDED_G: RangeInclusive<u32> = 0x1DF00..=0x1DFFF;
/// Glagolitic Supplement
#[cfg(feature = "glagolitic-supplement")]
pub const GLAGOLITIC_SUPPLEMENT: RangeInclusive<u32> = 0x1E000..=0x1E02F;
/// Cyrillic Extended-D
#[cfg(feature = "cyrillic-extended-d")]
pub const CYRILLIC_EXTENDED_D: RangeInclusive<u32> = 0x1E030..=0x1E08F;
/// Nyiakeng Puachue Hmong
#[cfg(feature = "nyiakeng-puachue-hmong")]
pub const NYIAKENG_PUACHUE_HMONG: RangeInclusive<u32> = 0x1E100..=0x1E14F;
/// Toto
#[cfg(feature = "toto")]
pub const TOTO: RangeInclusive<u32> = 0x1E290..=0x1E2BF;
/// Wancho
#[cfg(feature = "wancho")]
pub const WANCHO: RangeInclusive<u32> = 0x1E2C0..=0x1E2FF;
/// Nag Mundari
#[cfg(feature = "nag-mundari")]
pub const NAG_MUNDARI: RangeInclusive<u32> = 0x1E4D0..=0x1E4FF;
/// Ethiopic Extended-B
#[cfg(feature = "ethiopic-extended-b")]
pub const ETHIOPIC_EXTENDED_B: RangeInclusive<u32> = 0x1E7E0..=0x1E7FF;
/// Mende Kikakui
#[cfg(feature = "mende-kikakui")]
pub const MENDE_KIKAKUI: RangeInclusive<u32> = 0x1E800..=0x1E8DF;
/// Adlam
#[cfg(feature = "adlam")]
pub const ADLAM: RangeInclusive<u32> = 0x1E900..=0x1E95F;
/// Indic Siyaq Numbers
#[cfg(feature = "indic-siyaq-numbers")]
pub const INDIC_SIYAQ_NUMBERS: RangeInclusive<u32> = 0x1EC70..=0x1ECBF;
/// Ottoman Siyaq Numbers
#[cfg(feature = "ottoman-siyaq-numbers")]
pub const OTTOMAN_SIYAQ_NUMBERS: RangeInclusive<u32> = 0x1ED00..=0x1ED4F;
/// Arabic Mathematical Alphabetic Symbols
#[cfg(feature = "arabic-mathematical-alphabetic-symbols")]
pub const ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS: RangeInclusive<u32> = 0x1EE00..=0x1EEFF;
/// Mahjong Tiles
#[cfg(feature = "mahjong-tiles")]
pub const MAHJONG_TILES: RangeInclusive<u32> = 0x1F000..=0x1F02F;
/// Domino Tiles
#[cfg(feature = "domino-tiles")]
pub const DOMINO_TILES: RangeInclusive<u32> = 0x1F030..=0x1F09F;
/// Playing Cards
#[cfg(feature = "playing-cards")]
pub const PLAYING_CARDS: RangeInclusive<u32> = 0x1F0A0..=0x1F0FF;
/// Enclosed Alphanumeric Supplement
#[cfg(feature = "enclosed-alphanumeric-supplement")]
pub const ENCLOSED_ALPHANUMERIC_SUPPLEMENT: RangeInclusive<u32> = 0x1F100..=0x1F1FF;
/// Enclosed Ideographic Supplement
#[cfg(feature = "enclosed-ideographic-supplement")]
pub const ENCLOSED_IDEOGRAPHIC_SUPPLEMENT: RangeInclusive<u32> = 0x1F200..=0x1F2FF;
/// Miscellaneous Symbols and Pictographs
#[cfg(feature = "miscellaneous-symbols-and-pictographs")]
pub const MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS: RangeInclusive<u32> = 0x1F300..=0x1F5FF;
/// Emoticons (Emoji)
#[cfg(feature = "emoticons-emoji")]
pub const EMOTICONS_EMOJI: RangeInclusive<u32> = 0x1F600..=0x1F64F;
/// Ornamental Dingbats
#[cfg(feature = "ornamental-dingbats")]
pub const ORNAMENTAL_DINGBATS: RangeInclusive<u32> = 0x1F650..=0x1F67F;
/// Transport and Map Symbols
#[cfg(feature = "transport-and-map-symbols")]
pub const TRANSPORT_AND_MAP_SYMBOLS: RangeInclusive<u32> = 0x1F680..=0x1F6FF;
/// Alchemical Symbols
#[cfg(feature = "alchemical-symbols")]
pub const ALCHEMICAL_SYMBOLS: RangeInclusive<u32> = 0x1F700..=0x1F77F;
/// Geometric Shapes Extended
#[cfg(feature = "geometric-shapes-extended")]
pub const GEOMETRIC_SHAPES_EXTENDED: RangeInclusive<u32> = 0x1F780..=0x1F7FF;
/// Supplemental Arrows-C
#[cfg(feature = "supplemental-arrows-c")]
pub const SUPPLEMENTAL_ARROWS_C: RangeInclusive<u32> = 0x1F800..=0x1F8FF;
/// Supplemental Symbols and Pictographs
#[cfg(feature = "supplemental-symbols-and-pictographs")]
pub const SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS: RangeInclusive<u32> = 0x1F900..=0x1F9FF;
/// Chess Symbols
#[cfg(feature = "chess-symbols")]
pub const CHESS_SYMBOLS: RangeInclusive<u32> = 0x1FA00..=0x1FA6F;
/// Symbols and Pictographs Extended-A
#[cfg(feature = "symbols-and-pictographs-extended-a")]
pub const SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A: RangeInclusive<u32> = 0x1FA70..=0x1FAFF;
/// Symbols for Legacy Computing
#[cfg(feature = "symbols-for-legacy-computing")]
pub const SYMBOLS_FOR_LEGACY_COMPUTING: RangeInclusive<u32> = 0x1FB00..=0x1FBFF;
/// CJK Unified Ideographs Extension B
#[cfg(feature = "cjk-unified-ideographs-extension-b")]
pub const CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B: RangeInclusive<u32> = 0x20000..=0x2A6DF;
/// CJK Unified Ideographs Extension C
#[cfg(feature = "cjk-unified-ideographs-extension-c")]
pub const CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C: RangeInclusive<u32> = 0x2A700..=0x2B73F;
/// CJK Unified Ideographs Extension D
#[cfg(feature = "cjk-unified-ideographs-extension-d")]
pub const CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D: RangeInclusive<u32> = 0x2B740..=0x2B81F;
/// CJK Unified Ideographs Extension E
#[cfg(feature = "cjk-unified-ideographs-extension-e")]
pub const CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E: RangeInclusive<u32> = 0x2B820..=0x2CEAF;
/// CJK Unified Ideographs Extension F
#[cfg(feature = "cjk-unified-ideographs-extension-f")]
pub const CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F: RangeInclusive<u32> = 0x2CEB0..=0x2EBEF;
/// CJK Unified Ideographs Extension I
#[cfg(feature = "cjk-unified-ideographs-extension-i")]
pub const CJK_UNIFIED_IDEOGRAPHS_EXTENSION_I: RangeInclusive<u32> = 0x2EBF0..=0x2EE5F;
/// CJK Compatibility Ideographs Supplement
#[cfg(feature = "cjk-compatibility-ideographs-supplement")]
pub const CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT: RangeInclusive<u32> = 0x2F800..=0x2FA1F;
/// CJK Unified Ideographs Extension G
#[cfg(feature = "cjk-unified-ideographs-extension-g")]
pub const CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G: RangeInclusive<u32> = 0x30000..=0x3134F;
/// CJK Unified Ideographs Extension H
#[cfg(feature = "cjk-unified-ideographs-extension-h")]
pub const CJK_UNIFIED_IDEOGRAPHS_EXTENSION_H: RangeInclusive<u32> = 0x31350..=0x323AF;
/// Tags
#[cfg(feature = "tags")]
pub const TAGS: RangeInclusive<u32> = 0xE0000..=0xE007F;
/// Variation Selectors Supplement
#[cfg(feature = "variation-selectors-supplement")]
pub const VARIATION_SELECTORS_SUPPLEMENT: RangeInclusive<u32> = 0xE0100..=0xE01EF;
/// Supplementary Private Use Area-A
#[cfg(feature = "supplementary-private-use-area-a")]
pub const SUPPLEMENTARY_PRIVATE_USE_AREA_A: RangeInclusive<u32> = 0xF0000..=0xFFFFF;
/// Supplementary Private Use Area-B
#[cfg(feature = "supplementary-private-use-area-b")]
pub const SUPPLEMENTARY_PRIVATE_USE_AREA_B: RangeInclusive<u32> = 0x100000..=0x10FFFF;
/// Enabled unicode ranges.
pub const ENABLED_RANGES: &[RangeInclusive<u32>] = &[
    WHITESPACE,
    BASIC_LATIN,
    #[cfg(feature = "latin-1-supplement")]
    LATIN_1_SUPPLEMENT,
    #[cfg(feature = "latin-extended-a")]
    LATIN_EXTENDED_A,
    #[cfg(feature = "latin-extended-b")]
    LATIN_EXTENDED_B,
    #[cfg(feature = "ipa-extensions")]
    IPA_EXTENSIONS,
    #[cfg(feature = "spacing-modifier-letters")]
    SPACING_MODIFIER_LETTERS,
    #[cfg(feature = "combining-diacritical-marks")]
    COMBINING_DIACRITICAL_MARKS,
    #[cfg(feature = "greek-and-coptic")]
    GREEK_AND_COPTIC,
    #[cfg(feature = "cyrillic")]
    CYRILLIC,
    #[cfg(feature = "cyrillic-supplement")]
    CYRILLIC_SUPPLEMENT,
    #[cfg(feature = "armenian")]
    ARMENIAN,
    #[cfg(feature = "hebrew")]
    HEBREW,
    #[cfg(feature = "arabic")]
    ARABIC,
    #[cfg(feature = "syriac")]
    SYRIAC,
    #[cfg(feature = "arabic-supplement")]
    ARABIC_SUPPLEMENT,
    #[cfg(feature = "thaana")]
    THAANA,
    #[cfg(feature = "nko")]
    NKO,
    #[cfg(feature = "samaritan")]
    SAMARITAN,
    #[cfg(feature = "mandaic")]
    MANDAIC,
    #[cfg(feature = "syriac-supplement")]
    SYRIAC_SUPPLEMENT,
    #[cfg(feature = "arabic-extended-b")]
    ARABIC_EXTENDED_B,
    #[cfg(feature = "arabic-extended-a")]
    ARABIC_EXTENDED_A,
    #[cfg(feature = "devanagari")]
    DEVANAGARI,
    #[cfg(feature = "bengali")]
    BENGALI,
    #[cfg(feature = "gurmukhi")]
    GURMUKHI,
    #[cfg(feature = "gujarati")]
    GUJARATI,
    #[cfg(feature = "oriya")]
    ORIYA,
    #[cfg(feature = "tamil")]
    TAMIL,
    #[cfg(feature = "telugu")]
    TELUGU,
    #[cfg(feature = "kannada")]
    KANNADA,
    #[cfg(feature = "malayalam")]
    MALAYALAM,
    #[cfg(feature = "sinhala")]
    SINHALA,
    #[cfg(feature = "thai")]
    THAI,
    #[cfg(feature = "lao")]
    LAO,
    #[cfg(feature = "tibetan")]
    TIBETAN,
    #[cfg(feature = "myanmar")]
    MYANMAR,
    #[cfg(feature = "georgian")]
    GEORGIAN,
    #[cfg(feature = "hangul-jamo")]
    HANGUL_JAMO,
    #[cfg(feature = "ethiopic")]
    ETHIOPIC,
    #[cfg(feature = "ethiopic-supplement")]
    ETHIOPIC_SUPPLEMENT,
    #[cfg(feature = "cherokee")]
    CHEROKEE,
    #[cfg(feature = "unified-canadian-aboriginal-syllabics")]
    UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS,
    #[cfg(feature = "ogham")]
    OGHAM,
    #[cfg(feature = "runic")]
    RUNIC,
    #[cfg(feature = "tagalog")]
    TAGALOG,
    #[cfg(feature = "hanunoo")]
    HANUNOO,
    #[cfg(feature = "buhid")]
    BUHID,
    #[cfg(feature = "tagbanwa")]
    TAGBANWA,
    #[cfg(feature = "khmer")]
    KHMER,
    #[cfg(feature = "mongolian")]
    MONGOLIAN,
    #[cfg(feature = "unified-canadian-aboriginal-syllabics-extended")]
    UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED,
    #[cfg(feature = "limbu")]
    LIMBU,
    #[cfg(feature = "tai-le")]
    TAI_LE,
    #[cfg(feature = "new-tai-lue")]
    NEW_TAI_LUE,
    #[cfg(feature = "khmer-symbols")]
    KHMER_SYMBOLS,
    #[cfg(feature = "buginese")]
    BUGINESE,
    #[cfg(feature = "tai-tham")]
    TAI_THAM,
    #[cfg(feature = "combining-diacritical-marks-extended")]
    COMBINING_DIACRITICAL_MARKS_EXTENDED,
    #[cfg(feature = "balinese")]
    BALINESE,
    #[cfg(feature = "sundanese")]
    SUNDANESE,
    #[cfg(feature = "batak")]
    BATAK,
    #[cfg(feature = "lepcha")]
    LEPCHA,
    #[cfg(feature = "ol-chiki")]
    OL_CHIKI,
    #[cfg(feature = "cyrillic-extended-c")]
    CYRILLIC_EXTENDED_C,
    #[cfg(feature = "georgian-extended")]
    GEORGIAN_EXTENDED,
    #[cfg(feature = "sundanese-supplement")]
    SUNDANESE_SUPPLEMENT,
    #[cfg(feature = "vedic-extensions")]
    VEDIC_EXTENSIONS,
    #[cfg(feature = "phonetic-extensions")]
    PHONETIC_EXTENSIONS,
    #[cfg(feature = "phonetic-extensions-supplement")]
    PHONETIC_EXTENSIONS_SUPPLEMENT,
    #[cfg(feature = "combining-diacritical-marks-supplement")]
    COMBINING_DIACRITICAL_MARKS_SUPPLEMENT,
    #[cfg(feature = "latin-extended-additional")]
    LATIN_EXTENDED_ADDITIONAL,
    #[cfg(feature = "greek-extended")]
    GREEK_EXTENDED,
    #[cfg(feature = "general-punctuation")]
    GENERAL_PUNCTUATION,
    #[cfg(feature = "superscripts-and-subscripts")]
    SUPERSCRIPTS_AND_SUBSCRIPTS,
    #[cfg(feature = "currency-symbols")]
    CURRENCY_SYMBOLS,
    #[cfg(feature = "combining-diacritical-marks-for-symbols")]
    COMBINING_DIACRITICAL_MARKS_FOR_SYMBOLS,
    #[cfg(feature = "letterlike-symbols")]
    LETTERLIKE_SYMBOLS,
    #[cfg(feature = "number-forms")]
    NUMBER_FORMS,
    #[cfg(feature = "arrows")]
    ARROWS,
    #[cfg(feature = "mathematical-operators")]
    MATHEMATICAL_OPERATORS,
    #[cfg(feature = "miscellaneous-technical")]
    MISCELLANEOUS_TECHNICAL,
    #[cfg(feature = "control-pictures")]
    CONTROL_PICTURES,
    #[cfg(feature = "optical-character-recognition")]
    OPTICAL_CHARACTER_RECOGNITION,
    #[cfg(feature = "enclosed-alphanumerics")]
    ENCLOSED_ALPHANUMERICS,
    #[cfg(feature = "box-drawing")]
    BOX_DRAWING,
    #[cfg(feature = "block-elements")]
    BLOCK_ELEMENTS,
    #[cfg(feature = "geometric-shapes")]
    GEOMETRIC_SHAPES,
    #[cfg(feature = "miscellaneous-symbols")]
    MISCELLANEOUS_SYMBOLS,
    #[cfg(feature = "dingbats")]
    DINGBATS,
    #[cfg(feature = "miscellaneous-mathematical-symbols-a")]
    MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A,
    #[cfg(feature = "supplemental-arrows-a")]
    SUPPLEMENTAL_ARROWS_A,
    #[cfg(feature = "braille-patterns")]
    BRAILLE_PATTERNS,
    #[cfg(feature = "supplemental-arrows-b")]
    SUPPLEMENTAL_ARROWS_B,
    #[cfg(feature = "miscellaneous-mathematical-symbols-b")]
    MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B,
    #[cfg(feature = "supplemental-mathematical-operators")]
    SUPPLEMENTAL_MATHEMATICAL_OPERATORS,
    #[cfg(feature = "miscellaneous-symbols-and-arrows")]
    MISCELLANEOUS_SYMBOLS_AND_ARROWS,
    #[cfg(feature = "glagolitic")]
    GLAGOLITIC,
    #[cfg(feature = "latin-extended-c")]
    LATIN_EXTENDED_C,
    #[cfg(feature = "coptic")]
    COPTIC,
    #[cfg(feature = "georgian-supplement")]
    GEORGIAN_SUPPLEMENT,
    #[cfg(feature = "tifinagh")]
    TIFINAGH,
    #[cfg(feature = "ethiopic-extended")]
    ETHIOPIC_EXTENDED,
    #[cfg(feature = "cyrillic-extended-a")]
    CYRILLIC_EXTENDED_A,
    #[cfg(feature = "supplemental-punctuation")]
    SUPPLEMENTAL_PUNCTUATION,
    #[cfg(feature = "cjk-radicals-supplement")]
    CJK_RADICALS_SUPPLEMENT,
    #[cfg(feature = "kangxi-radicals")]
    KANGXI_RADICALS,
    #[cfg(feature = "ideographic-description-characters")]
    IDEOGRAPHIC_DESCRIPTION_CHARACTERS,
    #[cfg(feature = "cjk-symbols-and-punctuation")]
    CJK_SYMBOLS_AND_PUNCTUATION,
    #[cfg(feature = "hiragana")]
    HIRAGANA,
    #[cfg(feature = "katakana")]
    KATAKANA,
    #[cfg(feature = "bopomofo")]
    BOPOMOFO,
    #[cfg(feature = "hangul-compatibility-jamo")]
    HANGUL_COMPATIBILITY_JAMO,
    #[cfg(feature = "kanbun")]
    KANBUN,
    #[cfg(feature = "bopomofo-extended")]
    BOPOMOFO_EXTENDED,
    #[cfg(feature = "cjk-strokes")]
    CJK_STROKES,
    #[cfg(feature = "katakana-phonetic-extensions")]
    KATAKANA_PHONETIC_EXTENSIONS,
    #[cfg(feature = "enclosed-cjk-letters-and-months")]
    ENCLOSED_CJK_LETTERS_AND_MONTHS,
    #[cfg(feature = "cjk-compatibility")]
    CJK_COMPATIBILITY,
    #[cfg(feature = "cjk-unified-ideographs-extension-a")]
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A,
    #[cfg(feature = "yijing-hexagram-symbols")]
    YIJING_HEXAGRAM_SYMBOLS,
    #[cfg(feature = "cjk-unified-ideographs")]
    CJK_UNIFIED_IDEOGRAPHS,
    #[cfg(feature = "yi-syllables")]
    YI_SYLLABLES,
    #[cfg(feature = "yi-radicals")]
    YI_RADICALS,
    #[cfg(feature = "lisu")]
    LISU,
    #[cfg(feature = "vai")]
    VAI,
    #[cfg(feature = "cyrillic-extended-b")]
    CYRILLIC_EXTENDED_B,
    #[cfg(feature = "bamum")]
    BAMUM,
    #[cfg(feature = "modifier-tone-letters")]
    MODIFIER_TONE_LETTERS,
    #[cfg(feature = "latin-extended-d")]
    LATIN_EXTENDED_D,
    #[cfg(feature = "syloti-nagri")]
    SYLOTI_NAGRI,
    #[cfg(feature = "common-indic-number-forms")]
    COMMON_INDIC_NUMBER_FORMS,
    #[cfg(feature = "phags-pa")]
    PHAGS_PA,
    #[cfg(feature = "saurashtra")]
    SAURASHTRA,
    #[cfg(feature = "devanagari-extended")]
    DEVANAGARI_EXTENDED,
    #[cfg(feature = "kayah-li")]
    KAYAH_LI,
    #[cfg(feature = "rejang")]
    REJANG,
    #[cfg(feature = "hangul-jamo-extended-a")]
    HANGUL_JAMO_EXTENDED_A,
    #[cfg(feature = "javanese")]
    JAVANESE,
    #[cfg(feature = "myanmar-extended-b")]
    MYANMAR_EXTENDED_B,
    #[cfg(feature = "cham")]
    CHAM,
    #[cfg(feature = "myanmar-extended-a")]
    MYANMAR_EXTENDED_A,
    #[cfg(feature = "tai-viet")]
    TAI_VIET,
    #[cfg(feature = "meetei-mayek-extensions")]
    MEETEI_MAYEK_EXTENSIONS,
    #[cfg(feature = "ethiopic-extended-a")]
    ETHIOPIC_EXTENDED_A,
    #[cfg(feature = "latin-extended-e")]
    LATIN_EXTENDED_E,
    #[cfg(feature = "cherokee-supplement")]
    CHEROKEE_SUPPLEMENT,
    #[cfg(feature = "meetei-mayek")]
    MEETEI_MAYEK,
    #[cfg(feature = "hangul-syllables")]
    HANGUL_SYLLABLES,
    #[cfg(feature = "hangul-jamo-extended-b")]
    HANGUL_JAMO_EXTENDED_B,
    #[cfg(feature = "high-surrogates")]
    HIGH_SURROGATES,
    #[cfg(feature = "high-private-use-surrogates")]
    HIGH_PRIVATE_USE_SURROGATES,
    #[cfg(feature = "low-surrogates")]
    LOW_SURROGATES,
    #[cfg(feature = "private-use-area")]
    PRIVATE_USE_AREA,
    #[cfg(feature = "cjk-compatibility-ideographs")]
    CJK_COMPATIBILITY_IDEOGRAPHS,
    #[cfg(feature = "alphabetic-presentation-forms")]
    ALPHABETIC_PRESENTATION_FORMS,
    #[cfg(feature = "arabic-presentation-forms-a")]
    ARABIC_PRESENTATION_FORMS_A,
    #[cfg(feature = "variation-selectors")]
    VARIATION_SELECTORS,
    #[cfg(feature = "vertical-forms")]
    VERTICAL_FORMS,
    #[cfg(feature = "combining-half-marks")]
    COMBINING_HALF_MARKS,
    #[cfg(feature = "cjk-compatibility-forms")]
    CJK_COMPATIBILITY_FORMS,
    #[cfg(feature = "small-form-variants")]
    SMALL_FORM_VARIANTS,
    #[cfg(feature = "arabic-presentation-forms-b")]
    ARABIC_PRESENTATION_FORMS_B,
    #[cfg(feature = "halfwidth-and-fullwidth-forms")]
    HALFWIDTH_AND_FULLWIDTH_FORMS,
    #[cfg(feature = "specials")]
    SPECIALS,
    #[cfg(feature = "linear-b-syllabary")]
    LINEAR_B_SYLLABARY,
    #[cfg(feature = "linear-b-ideograms")]
    LINEAR_B_IDEOGRAMS,
    #[cfg(feature = "aegean-numbers")]
    AEGEAN_NUMBERS,
    #[cfg(feature = "ancient-greek-numbers")]
    ANCIENT_GREEK_NUMBERS,
    #[cfg(feature = "ancient-symbols")]
    ANCIENT_SYMBOLS,
    #[cfg(feature = "phaistos-disc")]
    PHAISTOS_DISC,
    #[cfg(feature = "lycian")]
    LYCIAN,
    #[cfg(feature = "carian")]
    CARIAN,
    #[cfg(feature = "coptic-epact-numbers")]
    COPTIC_EPACT_NUMBERS,
    #[cfg(feature = "old-italic")]
    OLD_ITALIC,
    #[cfg(feature = "gothic")]
    GOTHIC,
    #[cfg(feature = "old-permic")]
    OLD_PERMIC,
    #[cfg(feature = "ugaritic")]
    UGARITIC,
    #[cfg(feature = "old-persian")]
    OLD_PERSIAN,
    #[cfg(feature = "deseret")]
    DESERET,
    #[cfg(feature = "shavian")]
    SHAVIAN,
    #[cfg(feature = "osmanya")]
    OSMANYA,
    #[cfg(feature = "osage")]
    OSAGE,
    #[cfg(feature = "elbasan")]
    ELBASAN,
    #[cfg(feature = "caucasian-albanian")]
    CAUCASIAN_ALBANIAN,
    #[cfg(feature = "vithkuqi")]
    VITHKUQI,
    #[cfg(feature = "linear-a")]
    LINEAR_A,
    #[cfg(feature = "latin-extended-f")]
    LATIN_EXTENDED_F,
    #[cfg(feature = "cypriot-syllabary")]
    CYPRIOT_SYLLABARY,
    #[cfg(feature = "imperial-aramaic")]
    IMPERIAL_ARAMAIC,
    #[cfg(feature = "palmyrene")]
    PALMYRENE,
    #[cfg(feature = "nabataean")]
    NABATAEAN,
    #[cfg(feature = "hatran")]
    HATRAN,
    #[cfg(feature = "phoenician")]
    PHOENICIAN,
    #[cfg(feature = "lydian")]
    LYDIAN,
    #[cfg(feature = "meroitic-hieroglyphs")]
    MEROITIC_HIEROGLYPHS,
    #[cfg(feature = "meroitic-cursive")]
    MEROITIC_CURSIVE,
    #[cfg(feature = "kharoshthi")]
    KHAROSHTHI,
    #[cfg(feature = "old-south-arabian")]
    OLD_SOUTH_ARABIAN,
    #[cfg(feature = "old-north-arabian")]
    OLD_NORTH_ARABIAN,
    #[cfg(feature = "manichaean")]
    MANICHAEAN,
    #[cfg(feature = "avestan")]
    AVESTAN,
    #[cfg(feature = "inscriptional-parthian")]
    INSCRIPTIONAL_PARTHIAN,
    #[cfg(feature = "inscriptional-pahlavi")]
    INSCRIPTIONAL_PAHLAVI,
    #[cfg(feature = "psalter-pahlavi")]
    PSALTER_PAHLAVI,
    #[cfg(feature = "old-turkic")]
    OLD_TURKIC,
    #[cfg(feature = "old-hungarian")]
    OLD_HUNGARIAN,
    #[cfg(feature = "hanifi-rohingya")]
    HANIFI_ROHINGYA,
    #[cfg(feature = "rumi-numeral-symbols")]
    RUMI_NUMERAL_SYMBOLS,
    #[cfg(feature = "yezidi")]
    YEZIDI,
    #[cfg(feature = "arabic-extended-c")]
    ARABIC_EXTENDED_C,
    #[cfg(feature = "old-sogdian")]
    OLD_SOGDIAN,
    #[cfg(feature = "sogdian")]
    SOGDIAN,
    #[cfg(feature = "old-uyghur")]
    OLD_UYGHUR,
    #[cfg(feature = "chorasmian")]
    CHORASMIAN,
    #[cfg(feature = "elymaic")]
    ELYMAIC,
    #[cfg(feature = "brahmi")]
    BRAHMI,
    #[cfg(feature = "kaithi")]
    KAITHI,
    #[cfg(feature = "sora-sompeng")]
    SORA_SOMPENG,
    #[cfg(feature = "chakma")]
    CHAKMA,
    #[cfg(feature = "mahajani")]
    MAHAJANI,
    #[cfg(feature = "sharada")]
    SHARADA,
    #[cfg(feature = "sinhala-archaic-numbers")]
    SINHALA_ARCHAIC_NUMBERS,
    #[cfg(feature = "khojki")]
    KHOJKI,
    #[cfg(feature = "multani")]
    MULTANI,
    #[cfg(feature = "khudawadi")]
    KHUDAWADI,
    #[cfg(feature = "grantha")]
    GRANTHA,
    #[cfg(feature = "newa")]
    NEWA,
    #[cfg(feature = "tirhuta")]
    TIRHUTA,
    #[cfg(feature = "siddham")]
    SIDDHAM,
    #[cfg(feature = "modi")]
    MODI,
    #[cfg(feature = "mongolian-supplement")]
    MONGOLIAN_SUPPLEMENT,
    #[cfg(feature = "takri")]
    TAKRI,
    #[cfg(feature = "ahom")]
    AHOM,
    #[cfg(feature = "dogra")]
    DOGRA,
    #[cfg(feature = "warang-citi")]
    WARANG_CITI,
    #[cfg(feature = "dives-akuru")]
    DIVES_AKURU,
    #[cfg(feature = "nandinagari")]
    NANDINAGARI,
    #[cfg(feature = "zanabazar-square")]
    ZANABAZAR_SQUARE,
    #[cfg(feature = "soyombo")]
    SOYOMBO,
    #[cfg(feature = "unified-canadian-aboriginal-syllabics-extended-a")]
    UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_A,
    #[cfg(feature = "pau-cin-hau")]
    PAU_CIN_HAU,
    #[cfg(feature = "devanagari-extended-a")]
    DEVANAGARI_EXTENDED_A,
    #[cfg(feature = "bhaiksuki")]
    BHAIKSUKI,
    #[cfg(feature = "marchen")]
    MARCHEN,
    #[cfg(feature = "masaram-gondi")]
    MASARAM_GONDI,
    #[cfg(feature = "gunjala-gondi")]
    GUNJALA_GONDI,
    #[cfg(feature = "makasar")]
    MAKASAR,
    #[cfg(feature = "kawi")]
    KAWI,
    #[cfg(feature = "lisu-supplement")]
    LISU_SUPPLEMENT,
    #[cfg(feature = "tamil-supplement")]
    TAMIL_SUPPLEMENT,
    #[cfg(feature = "cuneiform")]
    CUNEIFORM,
    #[cfg(feature = "cuneiform-numbers-and-punctuation")]
    CUNEIFORM_NUMBERS_AND_PUNCTUATION,
    #[cfg(feature = "early-dynastic-cuneiform")]
    EARLY_DYNASTIC_CUNEIFORM,
    #[cfg(feature = "cypro-minoan")]
    CYPRO_MINOAN,
    #[cfg(feature = "egyptian-hieroglyphs")]
    EGYPTIAN_HIEROGLYPHS,
    #[cfg(feature = "egyptian-hieroglyph-format-controls")]
    EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS,
    #[cfg(feature = "anatolian-hieroglyphs")]
    ANATOLIAN_HIEROGLYPHS,
    #[cfg(feature = "bamum-supplement")]
    BAMUM_SUPPLEMENT,
    #[cfg(feature = "mro")]
    MRO,
    #[cfg(feature = "tangsa")]
    TANGSA,
    #[cfg(feature = "bassa-vah")]
    BASSA_VAH,
    #[cfg(feature = "pahawh-hmong")]
    PAHAWH_HMONG,
    #[cfg(feature = "medefaidrin")]
    MEDEFAIDRIN,
    #[cfg(feature = "miao")]
    MIAO,
    #[cfg(feature = "ideographic-symbols-and-punctuation")]
    IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION,
    #[cfg(feature = "tangut")]
    TANGUT,
    #[cfg(feature = "tangut-components")]
    TANGUT_COMPONENTS,
    #[cfg(feature = "khitan-small-script")]
    KHITAN_SMALL_SCRIPT,
    #[cfg(feature = "tangut-supplement")]
    TANGUT_SUPPLEMENT,
    #[cfg(feature = "kana-extended-b")]
    KANA_EXTENDED_B,
    #[cfg(feature = "kana-supplement")]
    KANA_SUPPLEMENT,
    #[cfg(feature = "kana-extended-a")]
    KANA_EXTENDED_A,
    #[cfg(feature = "small-kana-extension")]
    SMALL_KANA_EXTENSION,
    #[cfg(feature = "nushu")]
    NUSHU,
    #[cfg(feature = "duployan")]
    DUPLOYAN,
    #[cfg(feature = "shorthand-format-controls")]
    SHORTHAND_FORMAT_CONTROLS,
    #[cfg(feature = "znamenny-musical-notation")]
    ZNAMENNY_MUSICAL_NOTATION,
    #[cfg(feature = "byzantine-musical-symbols")]
    BYZANTINE_MUSICAL_SYMBOLS,
    #[cfg(feature = "musical-symbols")]
    MUSICAL_SYMBOLS,
    #[cfg(feature = "ancient-greek-musical-notation")]
    ANCIENT_GREEK_MUSICAL_NOTATION,
    #[cfg(feature = "kaktovik-numerals")]
    KAKTOVIK_NUMERALS,
    #[cfg(feature = "mayan-numerals")]
    MAYAN_NUMERALS,
    #[cfg(feature = "tai-xuan-jing-symbols")]
    TAI_XUAN_JING_SYMBOLS,
    #[cfg(feature = "counting-rod-numerals")]
    COUNTING_ROD_NUMERALS,
    #[cfg(feature = "mathematical-alphanumeric-symbols")]
    MATHEMATICAL_ALPHANUMERIC_SYMBOLS,
    #[cfg(feature = "sutton-signwriting")]
    SUTTON_SIGNWRITING,
    #[cfg(feature = "latin-extended-g")]
    LATIN_EXTENDED_G,
    #[cfg(feature = "glagolitic-supplement")]
    GLAGOLITIC_SUPPLEMENT,
    #[cfg(feature = "cyrillic-extended-d")]
    CYRILLIC_EXTENDED_D,
    #[cfg(feature = "nyiakeng-puachue-hmong")]
    NYIAKENG_PUACHUE_HMONG,
    #[cfg(feature = "toto")]
    TOTO,
    #[cfg(feature = "wancho")]
    WANCHO,
    #[cfg(feature = "nag-mundari")]
    NAG_MUNDARI,
    #[cfg(feature = "ethiopic-extended-b")]
    ETHIOPIC_EXTENDED_B,
    #[cfg(feature = "mende-kikakui")]
    MENDE_KIKAKUI,
    #[cfg(feature = "adlam")]
    ADLAM,
    #[cfg(feature = "indic-siyaq-numbers")]
    INDIC_SIYAQ_NUMBERS,
    #[cfg(feature = "ottoman-siyaq-numbers")]
    OTTOMAN_SIYAQ_NUMBERS,
    #[cfg(feature = "arabic-mathematical-alphabetic-symbols")]
    ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS,
    #[cfg(feature = "mahjong-tiles")]
    MAHJONG_TILES,
    #[cfg(feature = "domino-tiles")]
    DOMINO_TILES,
    #[cfg(feature = "playing-cards")]
    PLAYING_CARDS,
    #[cfg(feature = "enclosed-alphanumeric-supplement")]
    ENCLOSED_ALPHANUMERIC_SUPPLEMENT,
    #[cfg(feature = "enclosed-ideographic-supplement")]
    ENCLOSED_IDEOGRAPHIC_SUPPLEMENT,
    #[cfg(feature = "miscellaneous-symbols-and-pictographs")]
    MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS,
    #[cfg(feature = "emoticons-emoji")]
    EMOTICONS_EMOJI,
    #[cfg(feature = "ornamental-dingbats")]
    ORNAMENTAL_DINGBATS,
    #[cfg(feature = "transport-and-map-symbols")]
    TRANSPORT_AND_MAP_SYMBOLS,
    #[cfg(feature = "alchemical-symbols")]
    ALCHEMICAL_SYMBOLS,
    #[cfg(feature = "geometric-shapes-extended")]
    GEOMETRIC_SHAPES_EXTENDED,
    #[cfg(feature = "supplemental-arrows-c")]
    SUPPLEMENTAL_ARROWS_C,
    #[cfg(feature = "supplemental-symbols-and-pictographs")]
    SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS,
    #[cfg(feature = "chess-symbols")]
    CHESS_SYMBOLS,
    #[cfg(feature = "symbols-and-pictographs-extended-a")]
    SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A,
    #[cfg(feature = "symbols-for-legacy-computing")]
    SYMBOLS_FOR_LEGACY_COMPUTING,
    #[cfg(feature = "cjk-unified-ideographs-extension-b")]
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B,
    #[cfg(feature = "cjk-unified-ideographs-extension-c")]
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C,
    #[cfg(feature = "cjk-unified-ideographs-extension-d")]
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D,
    #[cfg(feature = "cjk-unified-ideographs-extension-e")]
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E,
    #[cfg(feature = "cjk-unified-ideographs-extension-f")]
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F,
    #[cfg(feature = "cjk-unified-ideographs-extension-i")]
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_I,
    #[cfg(feature = "cjk-compatibility-ideographs-supplement")]
    CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT,
    #[cfg(feature = "cjk-unified-ideographs-extension-g")]
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G,
    #[cfg(feature = "cjk-unified-ideographs-extension-h")]
    CJK_UNIFIED_IDEOGRAPHS_EXTENSION_H,
    #[cfg(feature = "tags")]
    TAGS,
    #[cfg(feature = "variation-selectors-supplement")]
    VARIATION_SELECTORS_SUPPLEMENT,
    #[cfg(feature = "supplementary-private-use-area-a")]
    SUPPLEMENTARY_PRIVATE_USE_AREA_A,
    #[cfg(feature = "supplementary-private-use-area-b")]
    SUPPLEMENTARY_PRIVATE_USE_AREA_B,
];
